* Лабораторная работа № 1 «Взаимодействие с базами данных в MS Visual Studio»

Цель работы : изучить вспомогательные классы для взаимодействия с базой данных через клиентское приложение(использование технологии ADO.NET).

Задание 1. Используя вспомогательные классы, предоставляемые поставщиком OLE DB (англ. Object Linking and Embedding), установить соединение с БД Колледж и реализовать выполнение запросов, перечисленных ниже.

Запрос 1. Вывести в DataGrid все записи из таблицы Students.

Запрос 2. Для студента с фамилией, заданной в текстовое поле, вывести поля Фамилия(Familia),№группы(№gr) и Бюджет(Budget), т. е. реализовать запрос на выборку, в котором фамилия будет вводится как параметр. Запрос выполняется вызовом обработчика события нажатия на соответствующую кнопку.

Запрос 3. В предыдущем запросе добавить в код конструкцию try..catch и предусмотреть случай, когда нет соединения с БД.

Запрос 4. Вычислить возраст студентов-юношей.

Запрос 5. Для студентов из группы, введенной в дополнительный TextBox, вывести Фамилию и инициалы, разделенные точками.

Запрос 6. Для студентов с заданным годом рождения(дополнительный TextBox), вывести фамилию и №группы

Запрос 7. Вывести фамилии и №группы иногородних студентов.

Примечание1. В предложенной БД Колледж поле Город(Gorod) заполняется только для иногородних студентов.

Запрос 8. Для создания новых записей в таблице программно, необходимо использовать код из следующего примера c методом ExecuteNonQuery(). В данном примере в таблицу Students вставляется новая запись с номером студенческого билета равным 1004, отображаются все записи вместе с добавленной

Задание 2.

В клиентском приложении, созданном в первой части лабораторной работы, необходимо реализовать следующие функции:

1) Вход в систему должен осуществляться через аутентификацию пользователей (аутентификация – это проверка подлинности пользователя путём сравнения введённого им пароля с паролем, сохранённым в базе данных пользователей). Причем аутентификация пользователей, которые были зарегистрированы в системе, реализуется посредством существующего логина и пароля. На форме входа в систему предусмотреть возможность регистрации нового пользователя. Добавить дополнительную таблицу в БД. При создании новой таблицы учесть следующее: в приложении могут быть пользователи с двумя ролями — студент и администратор(сотрудник учебной части). Студент может только просматривать таблицы из БД, а администратор может изменять данные в таблицах через клиентское приложение.

2) Показать расширенные функциональные возможности администратора(сформулировать запрос для нахождения статистической информации за период на отделении, показать возможность изменения данных в таблице(таблицах)).

3) Реализовать импорт данных из форм в MS Excel(использовать Microsoft.Office.Interop.Excel)

4) Действия пользователя, связанные с информационной безопасностью, необходимо запротоколировать (для каждого пользователя, вошедшего в систему, необходимо сохранять информацию о входе и выходе из системы в текстовом файле в следующем формате: логин пользователя, дата /время входа и выхода из системы).


Код:

Разметка базового окна:

#+INCLUDE: ./DataBase/MainWindow.xaml src xml

Разметка окна авторизации:

#+INCLUDE: ./DataBase/AuthWindow.xaml src xml

Код логики окна авторизации:

#+INCLUDE: ./DataBase/AuthWindow.xaml.cs src csharp

Код логики базового окна:

#+INCLUDE: ./DataBase/MainWindow.xaml.cs src csharp

Константы:

#+INCLUDE: ./DataBase/Constants.cs src csharp

Демонстрация работы приложения:

Окно авторизации:

[[./1.png]]

Переключение на регистрацию:

[[./2.png]]

Проверка на пустой логин:

[[./3.png]]

Проверка на пустой пароль:

[[./4.png]]

Вид программы от обычного пользователя:

[[./5.png]]

Демонстрация работы поиска:

[[./6.png]]


[[./7.png]]

Демонстрация работы запроса возраста юнош:

[[./8.png]]

[[./9.png]]

Демонстрация работы поиска по группе:

[[./10.png]]

Демонстрация работы поиска иногородних студентов:

[[./11.png]]

Демонстрация работы поиска по году рождения:

[[./12.png]]

Проверки при регистрации:

1. Логин уже существует
   
   [[./13.png]]
2. Не совпадение паролей

   [[./14.png]]

Демонстрация хранения данных:

- Пользователей

  [[./15.png]]
- Ролей

  [[./16.png]]

  
Демонстрация работы LOG'ов:

[[./17.png]]

Вид программы от администратора и работы образовательных реформ:

- Образовательная реформа №1

  Перемещение всех юношей без бюджета в Колпино и перевод их на бюджет

  [[./18.png]]

- Образовательная реформа №2
  
  Отчисление всех с контрактной формы

  [[./19.png]]


Демонстарция работы импорта в Excel:

[[./20.png]]

[[./21.png]]
